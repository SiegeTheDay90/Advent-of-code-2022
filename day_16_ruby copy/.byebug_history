c!
exit
candidate
holder
c
exit
holder
c
quit
holder
result
c!
c
c!
c
n
@head.rate
next_target.rate
next_target
n
c
result
c
n
target.rate
next_target.rate
target
next_target
n
c
n
c
result
c
@head
result
c
n
@head
target
target.rate
next_target.rate
next_target
target
n
result
c
n
holder
@head
result
target
c
n
next_target
target
n
result
@head.open?
@head.rate
@head.value
n
result
n
@head.open?
next_target.rate
n
@head.open?
@head
next_target.rate
target
next_target
n
holder
result
n
result
holder
c
self.head
distance(next_target)
@head.rate
next_target.rate
next_target
n
holder
c
result
holder
c!
n
@time_remaining
n
@time_remaining
n
@time_remaining
continue!
exit
continue!
contiue!
quit
self.delta(target)
self.delta
@head.distance(target)
@head
target.name
n
exit
target
n
help
ls
disp @time_remaining
disp @pipes.any?{|key, pipe| !pipe.open? && pipe.rate > 0}
@time_remaining
@pipes.any?{|key, pipe| !pipe.open? && pipe.rate > 0}
a.pipes.any?{|key, pipe| !pipe.open? && pipe.rate > 0}
@pipes.any?{key, pipe} !pipe.open? && pipe.rate > 0}
c
n
c
n
display total
