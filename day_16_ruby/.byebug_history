continue!
contiue!
quit
self.delta(target)
self.delta
@head.distance(target)
@head
target.name
n
exit
target
n
help
ls
disp @time_remaining
disp @pipes.any?{|key, pipe| !pipe.open? && pipe.rate > 0}
@time_remaining
@pipes.any?{|key, pipe| !pipe.open? && pipe.rate > 0}
a.pipes.any?{|key, pipe| !pipe.open? && pipe.rate > 0}
@pipes.any?{key, pipe} !pipe.open? && pipe.rate > 0}
c
n
c
n
display total
